---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  test-app-employee
  namespace: test-app
  labels:
    app:  test-app-employee
spec:
  selector:
    matchLabels:
      app: test-app-employee
  replicas: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      labels:
        app:  test-app-employee
    spec:
      containers:
      - name:  test-app-employee
        image:  docker.io/hihellobolke/test-app-employee:1
        resources:
          limits:
            memory: 128Mi
          requests:
            memory: 128Mi
        livenessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 3
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 3
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        env:
        - name: REDIS_URL
          value: redis://redis:6379
        ports:
        - containerPort: 8000
          name:  web
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  redis
  namespace: test-app
  labels:
    app:  redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  redis
    spec:
      containers:
      - name: redis
        image: docker.io/redis/redis-stack-server:latest
        resources:
          limits:
            memory: 128Mi
          requests:
            memory: 128Mi
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 3
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 3
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        ports:
        - containerPort: 6379
          name:  redis
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app-hello
  namespace: test-app
spec:
  replicas: 10
  selector:
    matchLabels:
      app: test-app-hello
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      labels:
        app: test-app-hello
    spec:
      containers:
      - image: docker.io/hihellobolke/test-app-hello:1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        name: test-app-hello
        ports:
        - containerPort: 8000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            memory: 128Mi
          requests:
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
