---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: test-app
spec:
  selector:
    app: redis
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: redis
    protocol: TCP
    port: 6379
    targetPort: 6379
---
# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     cloud.google.com/neg: '{"ingress":true}'
#   name: test-app-employee-ext
#   namespace: test-app
# spec:
#   allocateLoadBalancerNodePorts: true
#   externalTrafficPolicy: Cluster
#   internalTrafficPolicy: Cluster
#   ipFamilies:
#   - IPv4
#   ports:
#   - name: http
#     port: 80
#     protocol: TCP
#     targetPort: 8000
#   selector:
#     app: test-app-employee
#   sessionAffinity: None
#   type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: test-app-employee
  namespace: test-app
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: test-app-employee
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: test-app-hello
  namespace: test-app
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: test-app-hello
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: test-app-hello-ext
  namespace: test-app
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: test-app-hello
  type: LoadBalancer

